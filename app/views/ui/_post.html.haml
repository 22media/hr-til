- pagination ||= false
- draft ||= false

%article.post{ :class => if draft then 'draft' end }
  %section.copy
    = Phil.markup ["h1 p", "h1 p h2", "h1 p h3", "h1 ul"].sample
    - Phil.sometimes do
      %pre
        %code
          :plain
            commodi architectofd jf djakf j fj dkasfd j
    - Phil.sometimes do
      %p
        = Phil.words 1..5
        %code= Phil.words 1..5
        = Phil.words 1..5
    - Phil.sometimes do
      = Phil.paragraphs 1..2
    %footer
      - if draft
        %nav
          %p Draft Post
      - elsif pagination
        %nav
          %ul
            %li= link_to "&larr; previous TIL".html_safe, "#"
            %li= link_to "next TIL &rarr;".html_safe, "#"
      %p= link_to Phil.date.strftime("%B %e, %Y"), "#"
  %aside
    %ul
      %li
        = link_to "#" do
          more by
          %b= Phil.name
      - Phil.loop 1..4 do
        - lang = %w(assembly bash clojure coffeescript css elixir go html javascript ruby vim emberjs).sample
        %li
          %b= link_to "##{lang}", "#", class: lang
      %li
        = link_to "#", class: "like #{Phil.sometimes("liked")}" do
          liked
          - times = Phil.pick 0..5
          %b= pluralize(times, "time")

      - Phil.sometimes do
        %li
          = link_to "#" do
            %b edit this post
