$(function(){

  $('textarea.autosize').autosize();

  $(document.body).on("click", "#flash p", function(e) {
    e.preventDefault();
    $(this).fadeOut(200);
  });

  $(".site_about, .site_search").on("click", ".aside_toggle", function(e) {
    e.preventDefault();
    $(this).closest('aside')
      .toggleClass('open')
      .filter('.open').find(":input:visible").eq(0).focus();
  });

  // Taken from underscore.js
  function debounce(func, wait, immediate) {
    var timeout;
    return function() {
      var context = this, args = arguments;
      var later = function() {
        timeout = null;
        if (!immediate) func.apply(context, args);
      };
      var callNow = immediate && !timeout;
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
      if (callNow) func.apply(context, args);
    };
  };

  var post_form = {
    $el: $("#post_edit"),
    renderMarkdown: function() {
      var txt = post_form.$textarea.val();
      $.post("/post_preview", { body: txt }, function(result){
        post_form.$preview.html(result);
      });
    },
    renderWordCounts: function() {
      var max = <%= Post::MAX_WORDS %>,
        words = post_form.$textarea.val().split(/\s+|\n/).filter(Boolean).length,
        remaining_words = max - words,
        pluralized_word = remaining_words === 1 ? ' word' : ' words'

      post_form.$word_count
        .toggleClass('negative', remaining_words < 0)
        .text(words + ' total ' + pluralized_word);
      post_form.$word_limit
        .toggleClass('negative', remaining_words < 0)
        .text(remaining_words + pluralized_word + ' available');

    },
    init: function() {
      this.$preview = this.$el.find('.content_preview');
      this.$word_count = this.$el.find('.word_count');
      this.$word_limit = this.$el.find('.word_limit');
      this.$textarea = this.$el.find('#post_body');

      this.$textarea.on('keyup', this.renderWordCounts);
      this.$textarea.on('keyup', debounce(this.renderMarkdown, 350));
      this.$textarea.trigger('keyup');
    }
  }

  post_form.init();

  var autorefresh = function() {
    var timeout;
    var resetRefreshCounter = function(){
        clearTimeout(timeout);
        timeout = setTimeout(function(){location.reload(true);}, 10 * 60 * 1000);
    }
    $(document).on('mousemove', resetRefreshCounter);
    resetRefreshCounter();
  }

  if ($("#home").length) {
    autorefresh();
  }

  // Twitter button
  !function(d,s,id){var js,fjs=d.getElementsByTagName(s)[0],p=/^http:/.test(d.location)?'http':'https';if(!d.getElementById(id)){js=d.createElement(s);js.id=id;js.src=p+'://platform.twitter.com/widgets.js';fjs.parentNode.insertBefore(js,fjs);}}(document, 'script', 'twitter-wjs');

});
